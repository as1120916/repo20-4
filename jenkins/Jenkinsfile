pipeline {
    agent any

    environment {
        AWS_ACCESS_KEY_ID     = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
    }

    parameters {
        choice(name: 'ACTION', choices: ['create', 'destroy'], description: 'Choose whether to create or destroy the infrastructure')
    }

    stages {
        stage('Checkout Code') {
            steps {
                script {
                    git branch: 'main', 
                        credentialsId: 'github-token', 
                        url: 'https://github.com/as1120916/repo20-4.git'
                }
            }
        }

        stage('Initialize Terraform') {
            steps {
                dir('terra') {
                    sh 'terraform init'
                }
            }
        }

        stage('Terraform Plan') {
            when {
                expression { params.ACTION == 'create' }
            }
            steps {
                dir('terra') {
                    sh 'terraform plan -out=tfplan'
                }
            }
        }

        stage('Terraform Apply') {
            when {
                expression { params.ACTION == 'create' }
            }
            steps {
                dir('terra') {
                    sh 'terraform apply -auto-approve tfplan'
                }
            }
        }

        stage('Terraform Destroy') {
            when {
                expression { params.ACTION == 'destroy' }
            }
            steps {
                dir('terra') {
                    sh 'terraform destroy -auto-approve'
                }
            }
        }

        stage('Post Deployment Info') {
            steps {
                dir('terra') {
                    sh 'terraform output || true'
                }
            }
        }
    }
}
